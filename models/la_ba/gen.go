// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package la_ba

import (
	"context"
	"database/sql"

	"gorm.io/gorm"

	"gorm.io/gen"

	"gorm.io/plugin/dbresolver"
)

var (
	Q                  = new(Query)
	GamblingGameList   *gamblingGameList
	Lotterylog         *lotterylog
	Lotterylog1000     *lotterylog1000
	Lotterylog1001     *lotterylog1001
	Lotterylog1001User *lotterylog1001User
	Lotterylog1002     *lotterylog1002
	Lotterylog1003     *lotterylog1003
	Lotterylog1004     *lotterylog1004
	Lotterylog1005     *lotterylog1005
	Lotterylog101      *lotterylog101
	Lotterylog102      *lotterylog102
	Lotterylog105      *lotterylog105
	Lotterylog115      *lotterylog115
	Lotterylog135      *lotterylog135
	Lotterylog136      *lotterylog136
	Lotterylog301      *lotterylog301
	Lotterylog501      *lotterylog501
	Lotterylog5101     *lotterylog5101
	Lotterylog5200     *lotterylog5200
	Lotterylog5201     *lotterylog5201
	Lotterylog5201User *lotterylog5201User
	Lotterylog6005     *lotterylog6005
	Lotterylog99999    *lotterylog99999
	ScorePool          *scorePool
	Scoretotal         *scoretotal
	Scoretotallog      *scoretotallog
	Useraccount        *useraccount
)

func SetDefault(db *gorm.DB, opts ...gen.DOOption) {
	*Q = *Use(db, opts...)
	GamblingGameList = &Q.GamblingGameList
	Lotterylog = &Q.Lotterylog
	Lotterylog1000 = &Q.Lotterylog1000
	Lotterylog1001 = &Q.Lotterylog1001
	Lotterylog1001User = &Q.Lotterylog1001User
	Lotterylog1002 = &Q.Lotterylog1002
	Lotterylog1003 = &Q.Lotterylog1003
	Lotterylog1004 = &Q.Lotterylog1004
	Lotterylog1005 = &Q.Lotterylog1005
	Lotterylog101 = &Q.Lotterylog101
	Lotterylog102 = &Q.Lotterylog102
	Lotterylog105 = &Q.Lotterylog105
	Lotterylog115 = &Q.Lotterylog115
	Lotterylog135 = &Q.Lotterylog135
	Lotterylog136 = &Q.Lotterylog136
	Lotterylog301 = &Q.Lotterylog301
	Lotterylog501 = &Q.Lotterylog501
	Lotterylog5101 = &Q.Lotterylog5101
	Lotterylog5200 = &Q.Lotterylog5200
	Lotterylog5201 = &Q.Lotterylog5201
	Lotterylog5201User = &Q.Lotterylog5201User
	Lotterylog6005 = &Q.Lotterylog6005
	Lotterylog99999 = &Q.Lotterylog99999
	ScorePool = &Q.ScorePool
	Scoretotal = &Q.Scoretotal
	Scoretotallog = &Q.Scoretotallog
	Useraccount = &Q.Useraccount
}

func Use(db *gorm.DB, opts ...gen.DOOption) *Query {
	return &Query{
		db:                 db,
		GamblingGameList:   newGamblingGameList(db, opts...),
		Lotterylog:         newLotterylog(db, opts...),
		Lotterylog1000:     newLotterylog1000(db, opts...),
		Lotterylog1001:     newLotterylog1001(db, opts...),
		Lotterylog1001User: newLotterylog1001User(db, opts...),
		Lotterylog1002:     newLotterylog1002(db, opts...),
		Lotterylog1003:     newLotterylog1003(db, opts...),
		Lotterylog1004:     newLotterylog1004(db, opts...),
		Lotterylog1005:     newLotterylog1005(db, opts...),
		Lotterylog101:      newLotterylog101(db, opts...),
		Lotterylog102:      newLotterylog102(db, opts...),
		Lotterylog105:      newLotterylog105(db, opts...),
		Lotterylog115:      newLotterylog115(db, opts...),
		Lotterylog135:      newLotterylog135(db, opts...),
		Lotterylog136:      newLotterylog136(db, opts...),
		Lotterylog301:      newLotterylog301(db, opts...),
		Lotterylog501:      newLotterylog501(db, opts...),
		Lotterylog5101:     newLotterylog5101(db, opts...),
		Lotterylog5200:     newLotterylog5200(db, opts...),
		Lotterylog5201:     newLotterylog5201(db, opts...),
		Lotterylog5201User: newLotterylog5201User(db, opts...),
		Lotterylog6005:     newLotterylog6005(db, opts...),
		Lotterylog99999:    newLotterylog99999(db, opts...),
		ScorePool:          newScorePool(db, opts...),
		Scoretotal:         newScoretotal(db, opts...),
		Scoretotallog:      newScoretotallog(db, opts...),
		Useraccount:        newUseraccount(db, opts...),
	}
}

type Query struct {
	db *gorm.DB

	GamblingGameList   gamblingGameList
	Lotterylog         lotterylog
	Lotterylog1000     lotterylog1000
	Lotterylog1001     lotterylog1001
	Lotterylog1001User lotterylog1001User
	Lotterylog1002     lotterylog1002
	Lotterylog1003     lotterylog1003
	Lotterylog1004     lotterylog1004
	Lotterylog1005     lotterylog1005
	Lotterylog101      lotterylog101
	Lotterylog102      lotterylog102
	Lotterylog105      lotterylog105
	Lotterylog115      lotterylog115
	Lotterylog135      lotterylog135
	Lotterylog136      lotterylog136
	Lotterylog301      lotterylog301
	Lotterylog501      lotterylog501
	Lotterylog5101     lotterylog5101
	Lotterylog5200     lotterylog5200
	Lotterylog5201     lotterylog5201
	Lotterylog5201User lotterylog5201User
	Lotterylog6005     lotterylog6005
	Lotterylog99999    lotterylog99999
	ScorePool          scorePool
	Scoretotal         scoretotal
	Scoretotallog      scoretotallog
	Useraccount        useraccount
}

func (q *Query) Available() bool { return q.db != nil }

func (q *Query) clone(db *gorm.DB) *Query {
	return &Query{
		db:                 db,
		GamblingGameList:   q.GamblingGameList.clone(db),
		Lotterylog:         q.Lotterylog.clone(db),
		Lotterylog1000:     q.Lotterylog1000.clone(db),
		Lotterylog1001:     q.Lotterylog1001.clone(db),
		Lotterylog1001User: q.Lotterylog1001User.clone(db),
		Lotterylog1002:     q.Lotterylog1002.clone(db),
		Lotterylog1003:     q.Lotterylog1003.clone(db),
		Lotterylog1004:     q.Lotterylog1004.clone(db),
		Lotterylog1005:     q.Lotterylog1005.clone(db),
		Lotterylog101:      q.Lotterylog101.clone(db),
		Lotterylog102:      q.Lotterylog102.clone(db),
		Lotterylog105:      q.Lotterylog105.clone(db),
		Lotterylog115:      q.Lotterylog115.clone(db),
		Lotterylog135:      q.Lotterylog135.clone(db),
		Lotterylog136:      q.Lotterylog136.clone(db),
		Lotterylog301:      q.Lotterylog301.clone(db),
		Lotterylog501:      q.Lotterylog501.clone(db),
		Lotterylog5101:     q.Lotterylog5101.clone(db),
		Lotterylog5200:     q.Lotterylog5200.clone(db),
		Lotterylog5201:     q.Lotterylog5201.clone(db),
		Lotterylog5201User: q.Lotterylog5201User.clone(db),
		Lotterylog6005:     q.Lotterylog6005.clone(db),
		Lotterylog99999:    q.Lotterylog99999.clone(db),
		ScorePool:          q.ScorePool.clone(db),
		Scoretotal:         q.Scoretotal.clone(db),
		Scoretotallog:      q.Scoretotallog.clone(db),
		Useraccount:        q.Useraccount.clone(db),
	}
}

func (q *Query) ReadDB() *Query {
	return q.ReplaceDB(q.db.Clauses(dbresolver.Read))
}

func (q *Query) WriteDB() *Query {
	return q.ReplaceDB(q.db.Clauses(dbresolver.Write))
}

func (q *Query) ReplaceDB(db *gorm.DB) *Query {
	return &Query{
		db:                 db,
		GamblingGameList:   q.GamblingGameList.replaceDB(db),
		Lotterylog:         q.Lotterylog.replaceDB(db),
		Lotterylog1000:     q.Lotterylog1000.replaceDB(db),
		Lotterylog1001:     q.Lotterylog1001.replaceDB(db),
		Lotterylog1001User: q.Lotterylog1001User.replaceDB(db),
		Lotterylog1002:     q.Lotterylog1002.replaceDB(db),
		Lotterylog1003:     q.Lotterylog1003.replaceDB(db),
		Lotterylog1004:     q.Lotterylog1004.replaceDB(db),
		Lotterylog1005:     q.Lotterylog1005.replaceDB(db),
		Lotterylog101:      q.Lotterylog101.replaceDB(db),
		Lotterylog102:      q.Lotterylog102.replaceDB(db),
		Lotterylog105:      q.Lotterylog105.replaceDB(db),
		Lotterylog115:      q.Lotterylog115.replaceDB(db),
		Lotterylog135:      q.Lotterylog135.replaceDB(db),
		Lotterylog136:      q.Lotterylog136.replaceDB(db),
		Lotterylog301:      q.Lotterylog301.replaceDB(db),
		Lotterylog501:      q.Lotterylog501.replaceDB(db),
		Lotterylog5101:     q.Lotterylog5101.replaceDB(db),
		Lotterylog5200:     q.Lotterylog5200.replaceDB(db),
		Lotterylog5201:     q.Lotterylog5201.replaceDB(db),
		Lotterylog5201User: q.Lotterylog5201User.replaceDB(db),
		Lotterylog6005:     q.Lotterylog6005.replaceDB(db),
		Lotterylog99999:    q.Lotterylog99999.replaceDB(db),
		ScorePool:          q.ScorePool.replaceDB(db),
		Scoretotal:         q.Scoretotal.replaceDB(db),
		Scoretotallog:      q.Scoretotallog.replaceDB(db),
		Useraccount:        q.Useraccount.replaceDB(db),
	}
}

type queryCtx struct {
	GamblingGameList   IGamblingGameListDo
	Lotterylog         ILotterylogDo
	Lotterylog1000     ILotterylog1000Do
	Lotterylog1001     ILotterylog1001Do
	Lotterylog1001User ILotterylog1001UserDo
	Lotterylog1002     ILotterylog1002Do
	Lotterylog1003     ILotterylog1003Do
	Lotterylog1004     ILotterylog1004Do
	Lotterylog1005     ILotterylog1005Do
	Lotterylog101      ILotterylog101Do
	Lotterylog102      ILotterylog102Do
	Lotterylog105      ILotterylog105Do
	Lotterylog115      ILotterylog115Do
	Lotterylog135      ILotterylog135Do
	Lotterylog136      ILotterylog136Do
	Lotterylog301      ILotterylog301Do
	Lotterylog501      ILotterylog501Do
	Lotterylog5101     ILotterylog5101Do
	Lotterylog5200     ILotterylog5200Do
	Lotterylog5201     ILotterylog5201Do
	Lotterylog5201User ILotterylog5201UserDo
	Lotterylog6005     ILotterylog6005Do
	Lotterylog99999    ILotterylog99999Do
	ScorePool          IScorePoolDo
	Scoretotal         IScoretotalDo
	Scoretotallog      IScoretotallogDo
	Useraccount        IUseraccountDo
}

func (q *Query) WithContext(ctx context.Context) *queryCtx {
	return &queryCtx{
		GamblingGameList:   q.GamblingGameList.WithContext(ctx),
		Lotterylog:         q.Lotterylog.WithContext(ctx),
		Lotterylog1000:     q.Lotterylog1000.WithContext(ctx),
		Lotterylog1001:     q.Lotterylog1001.WithContext(ctx),
		Lotterylog1001User: q.Lotterylog1001User.WithContext(ctx),
		Lotterylog1002:     q.Lotterylog1002.WithContext(ctx),
		Lotterylog1003:     q.Lotterylog1003.WithContext(ctx),
		Lotterylog1004:     q.Lotterylog1004.WithContext(ctx),
		Lotterylog1005:     q.Lotterylog1005.WithContext(ctx),
		Lotterylog101:      q.Lotterylog101.WithContext(ctx),
		Lotterylog102:      q.Lotterylog102.WithContext(ctx),
		Lotterylog105:      q.Lotterylog105.WithContext(ctx),
		Lotterylog115:      q.Lotterylog115.WithContext(ctx),
		Lotterylog135:      q.Lotterylog135.WithContext(ctx),
		Lotterylog136:      q.Lotterylog136.WithContext(ctx),
		Lotterylog301:      q.Lotterylog301.WithContext(ctx),
		Lotterylog501:      q.Lotterylog501.WithContext(ctx),
		Lotterylog5101:     q.Lotterylog5101.WithContext(ctx),
		Lotterylog5200:     q.Lotterylog5200.WithContext(ctx),
		Lotterylog5201:     q.Lotterylog5201.WithContext(ctx),
		Lotterylog5201User: q.Lotterylog5201User.WithContext(ctx),
		Lotterylog6005:     q.Lotterylog6005.WithContext(ctx),
		Lotterylog99999:    q.Lotterylog99999.WithContext(ctx),
		ScorePool:          q.ScorePool.WithContext(ctx),
		Scoretotal:         q.Scoretotal.WithContext(ctx),
		Scoretotallog:      q.Scoretotallog.WithContext(ctx),
		Useraccount:        q.Useraccount.WithContext(ctx),
	}
}

func (q *Query) Transaction(fc func(tx *Query) error, opts ...*sql.TxOptions) error {
	return q.db.Transaction(func(tx *gorm.DB) error { return fc(q.clone(tx)) }, opts...)
}

func (q *Query) Begin(opts ...*sql.TxOptions) *QueryTx {
	tx := q.db.Begin(opts...)
	return &QueryTx{Query: q.clone(tx), Error: tx.Error}
}

type QueryTx struct {
	*Query
	Error error
}

func (q *QueryTx) Commit() error {
	return q.db.Commit().Error
}

func (q *QueryTx) Rollback() error {
	return q.db.Rollback().Error
}

func (q *QueryTx) SavePoint(name string) error {
	return q.db.SavePoint(name).Error
}

func (q *QueryTx) RollbackTo(name string) error {
	return q.db.RollbackTo(name).Error
}
