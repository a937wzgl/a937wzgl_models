// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameGamblingGameList = "gambling_game_list"

// GamblingGameList mapped from table <gambling_game_list>
type GamblingGameList struct {
	NGameID                    uint32 `gorm:"column:nGameID;type:int(10) unsigned;primaryKey;comment:游戏id" json:"nGameID"` // 游戏id
	StrGameName                string `gorm:"column:strGameName;type:varchar(255);not null" json:"strGameName"`
	NGameType                  int32  `gorm:"column:nGameType;type:int(5);not null" json:"nGameType"`
	NGamblingWaterLevelGold    int32  `gorm:"column:nGamblingWaterLevelGold;type:int(10);not null;comment:水位值(百分比)" json:"nGamblingWaterLevelGold"`           // 水位值(百分比)
	NGamblingBalanceGold       int64  `gorm:"column:nGamblingBalanceGold;type:bigint(20);not null;comment:水位库存" json:"nGamblingBalanceGold"`                  // 水位库存
	NGamblingWinPool           int64  `gorm:"column:nGamblingWinPool;type:bigint(20);not null;comment:奖池" json:"nGamblingWinPool"`                            // 奖池
	NGamblingUpdateBalanceGold int64  `gorm:"column:nGamblingUpdateBalanceGold;type:bigint(20);not null;comment:修改库存值(累计)" json:"nGamblingUpdateBalanceGold"` // 修改库存值(累计)
	NGamblingBigWinLevel       string `gorm:"column:nGamblingBigWinLevel;type:varchar(200);not null;comment:大奖幸运等级(千分概率)" json:"nGamblingBigWinLevel"`        // 大奖幸运等级(千分概率)
	NGamblingBigWinLuck        string `gorm:"column:nGamblingBigWinLuck;type:varchar(200);not null;comment:大奖幸运概率(百分概率)" json:"nGamblingBigWinLuck"`          // 大奖幸运概率(百分概率)
}

// TableName GamblingGameList's table name
func (*GamblingGameList) TableName() string {
	return TableNameGamblingGameList
}
