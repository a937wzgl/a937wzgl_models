// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameNewuseraccount = "newuseraccounts"

// Newuseraccount mapped from table <newuseraccounts>
type Newuseraccount struct {
	ID             int32     `gorm:"column:Id;type:int(11);primaryKey;autoIncrement:true" json:"Id"`
	Account        string    `gorm:"column:Account;type:char(50);not null" json:"Account"`
	Password       string    `gorm:"column:Password;type:char(64);not null" json:"Password"`
	Nickname       string    `gorm:"column:nickname;type:varchar(128);not null" json:"nickname"`
	Score          uint32    `gorm:"column:score;type:int(20) unsigned;not null" json:"score"`
	AddDate        time.Time `gorm:"column:AddDate;type:timestamp;not null;default:CURRENT_TIMESTAMP" json:"AddDate"`
	LoginCount     uint32    `gorm:"column:LoginCount;type:int(11) unsigned;not null" json:"LoginCount"`
	P              string    `gorm:"column:p;type:char(20)" json:"p"`
	Diamond        uint32    `gorm:"column:diamond;type:int(20) unsigned;not null" json:"diamond"`
	GiftTicket     int32     `gorm:"column:giftTicket;type:int(10);not null" json:"giftTicket"`
	PhoneNo        string    `gorm:"column:phoneNo;type:char(13)" json:"phoneNo"`
	Email          string    `gorm:"column:email;type:char(20)" json:"email"`
	Sex            int32     `gorm:"column:sex;type:int(1)" json:"sex"`
	City           string    `gorm:"column:city;type:char(20)" json:"city"`
	Province       string    `gorm:"column:province;type:char(20)" json:"province"`
	Country        string    `gorm:"column:country;type:char(20)" json:"country"`
	Headimgurl     string    `gorm:"column:headimgurl;type:char(200)" json:"headimgurl"`
	Language       string    `gorm:"column:language;type:char(10)" json:"language"`
	Robot          bool      `gorm:"column:Robot;type:tinyint(1)" json:"Robot"`
	ChannelType    string    `gorm:"column:ChannelType;type:char(30)" json:"ChannelType"`
	Official       bool      `gorm:"column:official;type:tinyint(1)" json:"official"`
	Gametoken      string    `gorm:"column:gametoken;type:char(32)" json:"gametoken"`
	Qdid           uint32    `gorm:"column:qdid;type:int(10) unsigned;comment:渠道id" json:"qdid"` // 渠道id
	Housecard      uint32    `gorm:"column:housecard;type:int(20) unsigned" json:"housecard"`
	TotalRecharge  float64   `gorm:"column:totalRecharge;type:decimal(10,2) unsigned;default:0.00" json:"totalRecharge"`
	Loginip        string    `gorm:"column:loginip;type:varchar(255)" json:"loginip"`
	Iscanlogin     bool      `gorm:"column:iscanlogin;type:tinyint(1) unsigned;comment:1 can 0 no" json:"iscanlogin"` // 1 can 0 no
	DianshaScore   uint32    `gorm:"column:diansha_score;type:int(11) unsigned" json:"diansha_score"`
	DianshaGameids string    `gorm:"column:diansha_gameids;type:varchar(255)" json:"diansha_gameids"`
	IsVip          bool      `gorm:"column:is_vip;type:tinyint(1) unsigned;comment:0 1" json:"is_vip"` // 0 1
	G4UID          string    `gorm:"column:g4_uid;type:varchar(100)" json:"g4_uid"`
	AccountUsing   int32     `gorm:"column:account_using;type:int(10);not null;default:1" json:"account_using"`
}

// TableName Newuseraccount's table name
func (*Newuseraccount) TableName() string {
	return TableNameNewuseraccount
}
